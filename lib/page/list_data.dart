import 'dart:async';
import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import '../../src/api.dart';
import '../model/autogenerated.dart';
import 'detail_data.dart';

class ListData extends StatefulWidget {
  const ListData({Key? key}) : super(key: key);

  @override
  _ListDataState createState() => _ListDataState();
}

class _ListDataState extends State<ListData> {
  String endpoint = ApiService.getList;
  late Future<Autogenerated> futureData;
  Future<Autogenerated> fetchData() async {
    final response = await http.get(Uri.parse(endpoint));
    if (response.statusCode == 200) {
      return Autogenerated.fromJson(jsonDecode(response.body));
    } else {
      throw Exception('Unexpected error occured!');
    }
  }

  @override
  void initState() {
    super.initState();
    futureData = fetchData();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text("Listing Data"),
        backgroundColor: Colors.black,
      ),
      body: FutureBuilder<Autogenerated>(
        future: futureData,
        builder: (context, snapshot) {
          if (snapshot.hasData) {
            Autogenerated? autogenerated = snapshot.data;
            var data = autogenerated!.articles;
            return ListView.builder(
                itemCount: data!.length,
                itemBuilder: (BuildContext context, int index) {
                  return GestureDetector(
                    onTap: () {
                      Navigator.of(context).push(
                        MaterialPageRoute(
                          builder: (context) => DetailData(
                              urlToImage: data[index].urlToImage.toString(),
                              title: data[index].title.toString(),
                              description: data[index].description.toString()),
                        ),
                      );
                    },
                    child: Card(
                      child: ListTile(
                        leading: CircleAvatar(
                          backgroundColor: Colors.grey,
                          child: Image.network(
                            data[index].urlToImage.toString(),
                            fit: BoxFit.fitWidth,
                          ),
                        ),
                        title: Text(
                          data[index].source!.name.toString(),
                          style: const TextStyle(
                            fontSize: 18,
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                        subtitle: Text(
                          data[index].title.toString(),
                          style: const TextStyle(
                            fontSize: 16,
                          ),
                          overflow: TextOverflow.ellipsis,
                          maxLines: 2,
                        ),
                        trailing: const Icon(Icons.more_vert),
                        isThreeLine: true,
                      ),
                    ),
                  );
                });
          } else if (snapshot.hasError) {
            return Text("${snapshot.error}");
          }

          return const Center(child: CircularProgressIndicator());
        },
      ),
    );
  }
}
